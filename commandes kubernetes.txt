 
 -- connect us with tenant id :
 az login --tenant 8b91cfba-6c1d-4dc6-81e9-79facd7f9d4f
 
 -- create a ressource group  for kubernetes
 az group create --name ecommerceKubernetesRessourceGroup --location westeurope
 
 -- create a container registry
az acr create --resource-group ecommerceKubernetesRessourceGroup --name myregistrykubernetes --sku Basic --location westeurope


 
 -- create kubernetes cluster
 az aks create --resource-group ecommerceKubernetesRessourceGroup --name ecommerce-aks-cluster --node-count 1 --node-vm-size Standard_B2s --enable-addons monitoring --generate-ssh-keys
 
 -- Tag image to azure registry
 docker tag demowebapp-api-image:1.0 myregistrykubernetes.azurecr.io/demowebapp-api-image:1.0
 
 -- connect to ACR azure 
 az acr login --name myregistrykubernetes
 
 --  create all image with file docker compose
 docker-compose -f  docker-compose-build.yaml  up -d --build

  docker-compose -f  docker-compose-build.yaml down  
  docker-compose -f docker-compose-build.yaml down -v --rmi all


 -- push image tagged to docker 
docker push myregistrykubernetes.azurecr.io/demowebapp-api-image:1.0

 -- give permissions to cluster ecommerce-aks-cluster  for pushing container registry 
 az aks update --resource-group ecommerceKubernetesRessourceGroup --name ecommerce-aks-cluster --attach-acr myregistrykubernetes

 -- get credential from particular kubernetes cluster
 az aks get-credentials --resource-group ecommerceKubernetesRessourceGroup --name ecommerce-aks-cluster 
 
 -- Apply content of deployment manifest
  kubectl apply -f deployment.yml
 
 -- Get list of deployments
  kubectl get deployments
  
 -- Get Details of one deployment
   kubectl describe deployment demowebapp-deployment
   
 -- Get list of pods
   kubectl get pods 
 
 -- Get details on pods
  kubectl describe pod demowebapp-deployment-588d474bd6-s2qwn
  
  -- get log of one  pod  
  kubectl logs  demowebapp-deployment-588d474bd6-s2qwn
  
   -- Apply content of service manifest
  kubectl apply -f service.yml
  
   -- Get  list of services
    kubectl get services 

   -- Get info on our services
   kubectl get service demowebapp-service
   
    -- Get more details on our services
   kubectl describe service demowebapp-service
   
   
   -- Tag all Docker image and push them o n azure
	
	docker tag postgres:latest  myregistrykubernetes.azurecr.io/postgres:latest
	docker push myregistrykubernetes.azurecr.io/postgres:latest
	
	docker tag mongo:latest myregistrykubernetes.azurecr.io/mongo:latest
	docker push myregistrykubernetes.azurecr.io/mongo:latest
    
	docker tag orders-microservice:latest  myregistrykubernetes.azurecr.io/orders-microservice:latest
	docker push myregistrykubernetes.azurecr.io/orders-microservice:latest
	
	docker tag users-microservice:latest  myregistrykubernetes.azurecr.io/users-microservice:latest
	docker push myregistrykubernetes.azurecr.io/users-microservice:latest
	
	docker tag products-microservice:latest  myregistrykubernetes.azurecr.io/products-microservice:5.0
	docker push myregistrykubernetes.azurecr.io/products-microservice:5.0
	
	docker tag api-getway-image:1.0  myregistrykubernetes.azurecr.io/api-getway-image:3.0
	docker push myregistrykubernetes.azurecr.io/api-getway-image:3.0

    docker tag mysql:latest  myregistrykubernetes.azurecr.io/mysql:latest
	docker push myregistrykubernetes.azurecr.io/mysql:latest
	
	docker tag rabbitmq:3.8-management  myregistrykubernetes.azurecr.io/rabbitmq:3.8-management
	docker push myregistrykubernetes.azurecr.io/rabbitmq:3.8-management	
	
   docker tag redis:latest  myregistrykubernetes.azurecr.io/redis:latest
   docker push myregistrykubernetes.azurecr.io/redis:latest

    -- create a namespace with aks
	    kubectl create namespace ecommerce-namespace
	
	-- Apply all deployments
	 kubectl apply -f .
	 
	-- get deployment by each file
	kubectl apply -f mysql-deployement.yml  
	kubectl apply -f mysql.service.yml 
	
    kubectl apply -f mongodb-deployment.yml
	kubectl apply -f mongodb.service.yaml

    kubectl apply -f rabbitMQ-deployment.yml
	kubectl apply -f rabbitmq-service-deployment.yml


    kubectl apply -f redis-deployment.yml
	kubectl apply -f redis.service.yaml

	kubectl apply -f postgres-deployment.yml
	kubectl apply -f postgres-service-deployment.yml


    kubectl apply -f orders-microservices-deployment.yml
	kubectl apply -f orders-microservice.service.yaml

	kubectl apply -f products-microservice-deployment.yml
	kubectl apply -f products-microservice.service.yaml

	kubectl apply -f users-microservice-deployment.yml
	kubectl apply -f users-microservice.service.yaml

	kubectl apply -f postgres-deployment.yml
	kubectl apply -f postgres-service-deployment.yml
	
	kubectl apply -f apigateway-deployment.yml
	kubectl apply -f apigateway-service.yaml 

	-- get deployment on specific namespace
	  kubectl get deployments --namespace ecommerce-namespace

	-- get deployment description
	kubectl describe deployment orders-microservice-deployment --namespace  ecommerce-namespace

	 -- List all pods of specific namespace
	 kubectl get pods --namespace ecommerce-namespace

	 -- delete all deploiements
	 kubectl delete deployments --all -n ecommerce-namespace
	 kubectl delete deployment mysql-deployment-84ccdf995-7slvt -n ecommerce-namespace



	 -- Describe  details  on pods 
 kubectl describe pod mongodb-deployment-68c469d44-zmgqr --namespace ecommerce-namespace
 kubectl describe pod mysql-deployment-5b547dfd49-phvfv --namespace ecommerce-namespace
 
  -- delete all images and tag linked to pod
  az acr repository delete --name myregistrykubernetes --repository mongodb-image --yes


	 -- get log of pods
	 kubectl get pods --namespace ecommerce-namespace 

  kubectl logs apigateway-deployment-dbc4bdd4-zdbks --namespace ecommerce-namespace 
  kubectl logs products-microservice-deployment-7bc6c8dcd7-mw7k2 --namespace ecommerce-namespace  
  kubectl logs mysql-deployment-84ccdf995-7slvt  -n ecommerce-namespace  

    --  connexion to mysql 
	kubectl exec -it mysql-deployment-xxxxxx -n ecommerce-namespace -- bash



    -- get All deployments and services
 kubectl get svc -n  ecommerce-namespace


 kubectl exec -it mysql-deployment-5b547dfd49-phvfv  -n ecommerce-namespace -- bash

 kubectl describe pod mysql -n ecommerce-namespace
